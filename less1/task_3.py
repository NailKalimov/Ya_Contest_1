"""Телефонные номера в адресной книге мобильного телефона имеют один из 
следующих форматов: +7<код><номер>, 8<код><номер>, <номер>, где <номер> — 
это семь цифр, а <код> — это три цифры или три цифры в круглых скобках. Если 
код не указан, то считается, что он равен 495. Кроме того, в записи телефонного 
номера может стоять знак “-” между любыми двумя цифрами (см. пример). На 
данный момент в адресной книге телефона Васи записано всего три телефонных 
номера, и он хочет записать туда еще один. Но он не может понять, не записан 
ли уже такой номер в телефонной книге. Помогите ему! Два телефонных номера 
совпадают, если у них равны коды и равны номера. Например, +7(916)0123456 и 
89160123456 — это один и тот же номер.

Формат ввода
В первой строке входных данных записан номер телефона, который Вася хочет 
добавить в адресную книгу своего телефона. В следующих трех строках записаны 
три номера телефонов, которые уже находятся в адресной книге телефона Васи. 
Гарантируется, что каждая из записей соответствует одному из трех приведенных 
в условии форматов.

Формат вывода
Для каждого телефонного номера в адресной книге выведите YES (заглавными 
буквами), если он совпадает с тем телефонным номером, который Вася хочет 
добавить в адресную книгу или NO (заглавными буквами) в противном случае."""

from sys import stdin


def normalize_number(number):
    trans = str.maketrans(
        {'+': None, "(": None, ")": None, "-": None, "\n": None})
    return number.translate(trans)


def is_number_in_book(new_number, phone_book):
    for number in phone_book:
        if new_number == number or (new_number == number[4:] and number[1:4] == '495'):
            return 'YES'
    return 'NO'


new_number = normalize_number(stdin.readline().rstrip())
phone_book = [normalize_number(i) for i in stdin.readlines()]

if len(new_number) == 7:
    print(is_number_in_book(new_number, phone_book))
else:
    print(is_number_in_book(new_number[1:], phone_book))
