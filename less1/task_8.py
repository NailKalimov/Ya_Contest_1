"""На некоторых кросс-платформенных станциях метро (как, например, 
«Третьяковская») на разные стороны платформы приходят поезда разных 
направлений. Таня договорилась встретиться с подругой на такой станции, но 
поскольку подруга приехала из другого часового пояса, то из-за джетлага сильно 
проспала, и Тане пришлось долго её ждать. Поезда всегда ходят точно по 
расписанию, и Таня знает, что поезд стоит на платформе ровно одну минуту, а 
интервал между поездами (время, в течение которого поезда у платформы нет) 
составляет a минут для поездов на первом пути и b минут для поездов на втором 
пути. То есть на первый путь приезжает поезд и стоит одну минуту, затем в 
течение a минут поезда у платформы нет, затем в течение одной минуты у 
платформы стоит следующий поезд и т. д.

Пока Таня стояла на платформе, она насчитала n поездов на первом пути и m 
поездов на втором пути. Определите минимальное и максимальное время, которое 
Таня могла провести на платформе, или сообщите, что она точно сбилась со счёта.

Все поезда, которые видела Таня, она наблюдала в течение всей минуты, то есть 
Таня не приходит и не уходит с платформы посередине той минуты, когда поезд 
стоит на платформе.

Формат ввода
Первая строка входных данных содержит число a — интервал между поездами на 
первом пути. Вторая строка содержит число b — интервал между поездами на 
втором пути. Третья строка содержит число n — количество поездов на первом 
пути, которые увидела Таня. Четвёртая строка содержит число m — количество 
поездов на втором пути, которые увидела Таня. Все числа — целые, от 1 до 1000.

Формат вывода
Программа должна вывести два числа: минимальное и максимальное время в минутах, 
которое Таня могла стоять на платформе, или одно число -1, если Таня точно 
ошиблась."""
# Пример 1: a = 1, b = 3, n = 3, m = 2 Вывод: 5 7
# min time 1 branch = 1 + a + 1 + a + 1 = 5
# min time 2 branch = 1 + b + 1 = 5
# max time 1 branch = a + 1 + a + 1 + a = 7
# max time 2 branch = b + 1 + b + 1 + b = 10
# output: max(5, 5) min(7, 10)
from sys import stdin


def calc_min_time(interval, value):
    return value * 1 + (value - 1) * interval


def calc_max_time(interval, value):
    return (value + 1) * interval + value * 1


def calc_duration_of_observ(a, b, n, m):
    min_t_1_b = calc_min_time(a, n)
    min_t_2_b = calc_min_time(b, m)
    max_t_1_b = calc_max_time(a, n)
    max_t_2_b = calc_max_time(b, m)
    if min_t_1_b > max_t_2_b or min_t_2_b > max_t_1_b:
        return -1
    else:
        return f'{max(calc_min_time(a, n), calc_min_time(b, m))} {min(calc_max_time(a, n), calc_max_time(b, m))}'


a, b, n, m = map(int, stdin.readlines())
print(calc_duration_of_observ(a, b, n, m))
